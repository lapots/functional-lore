apply plugin: 'haskell'
apply plugin: 'de.undercouch.download'

import de.undercouch.gradle.tasks.download.Download
import org.apache.commons.io.*
import org.apache.commons.compress.compressors.xz.XZCompressorInputStream

def currentProject() {
    project(':').projectDir
}

def xzSupport(path, file) {
    def unpackXzFile = file - ".xz"
    println "Path to unpacked tar: $unpackXzFile"
    new File(path, file).withInputStream { stream ->
        new File(path, unpackXzFile).withOutputStream { outputStream ->
            def xzInput = new XZCompressorInputStream(new BufferedInputStream(stream))

            IOUtils.copy(xzInput, outputStream)
        }
    }
    return "$path\\$unpackXzFile"
}

task downloadGHC(type: Download) {
    src "$ghcDownloadLink"
    dest new File("${ currentProject() }\$installationPath", "$ghcPackageName")
    onlyIfNewer true
}

// issue with tar.xz extension
task unpackGHC(dependsOn: downloadGHC, type: Copy) << {
    from tarTree(xzSupport("${ currentProject() }\$installationPath", "$ghcPackageName"))
    into "${ evaluate("$applicationPath") }"
}

task removeGHC << {
    file("${ currentProject() }/applications/ghc").deleteDir()
}

// issue with SSL
task downloadCabal(type: Download) {
    src "$cabalDownloadLink"
    dest new File("${ currentProject() }/applications/install", "cabal-install-1.24.0.0-x86_64-unknown-mingw32.zip")
    onlyIfNewer true
}

task unpackCabal(dependsOn: downloadCabal, type: Copy) {
    from zipTree(downloadCabal.dest)
    into "${ currentProject() }/applications/cabal"
}

task removeCabal << {
    file("${ currentProject() }/applications/cabal").deleteDir()
}

task cleanupInstall << {
    file("${ currentProject() }/applications/install").deleteDir()
}

haskell {
    envConfigurer { envMap ->
        envMap.put("PATH", [
                "$rootDir/applications/ghc/bin",
                "$rootDir/applications/cabal/bin",
                envMap.get("PATH")
        ].join(":"))
    }
}
